version: "3.4"
services:       
  nginx:
    image: ${registry:-docker.io}/ydcode/pack:image-nginx-1.0.0
    container_name: pop-nginx
    restart: always
    ports:
      - 80:80
      - 443:443
      - 1688:1688
    volumes:
      - nginx_wwwroot_data:/home/wwwroot
      - nginx_ssl_data:/etc/letsencrypt
      - nginx_conf_data:/etc/nginx/conf.d
      - nginx_temp_logs:/home/temp/logs
    networks:
      - web_server_network
    logging:
      options:
        max-size: "200m"
  
  useragent:
    image: ${registry:-docker.io}/ydcode/pack:image-user-agent-1.0.0
    container_name: pop-useragent
    ports:
      - 8099:8099
    restart: always
    networks:
      - web_server_network
    logging:
      options:
        max-size: "200m"
        
  web-pop-server:
    image: ${registry:-docker.io}/ydcode/pack:web-pop-server-dev-1.0.0
    container_name: web-pop-server
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - ROCKSDB_HOST=${ROCKSDB_HOST}
      - ROCKSDB_PORT=${ROCKSDB_PORT}
      - DB_PASSWORD=${DB_PASSWORD}
      - SSL_EMAIL=${SSL_EMAIL}
      - USER_AGENT_HOST=${USER_AGENT_HOST}
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
      - AWS_ACCESS_KEY_MASTER=${AWS_ACCESS_KEY_MASTER}
      - AWS_SECRET_KEY_MASTER=${AWS_SECRET_KEY_MASTER}
      - SERVER_NAME=${SERVER_NAME}

    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /usr/bin/docker:/usr/bin/docker
      - temp_data:/home/temp
      - nginx_wwwroot_data:/home/wwwroot
      - nginx_ssl_data:/etc/letsencrypt
      - nginx_conf_data:/etc/nginx/conf.d

      - /root/.ssh:/root/.ssh # dev
      - /root/boot:/root/boot # dev
      - /root/.m2:/root/.m2 #dev
    restart: always
    depends_on:
      - nginx
    networks:
      - web_server_network
    logging:
      options:
        max-size: "200m"
        
        
  web-pop-dashboard:
    image: ${registry:-docker.io}/ydcode/pack:web-pop-dashboard-dev-1.0.0
    container_name: web-pop-dashboard
    environment:
      - DASHBOARD_DOMAIN=${DASHBOARD_DOMAIN}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - ROCKSDB_HOST=${ROCKSDB_HOST}
      - ROCKSDB_PORT=${ROCKSDB_PORT}
      - DB_PASSWORD=${DB_PASSWORD}
      - CDN_DOMAIN_CN=${CDN_DOMAIN_CN}
      - SSL_EMAIL=${SSL_EMAIL}
      - USER_AGENT_HOST=${USER_AGENT_HOST}
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
      - AWS_ACCESS_KEY_MASTER=${AWS_ACCESS_KEY_MASTER}
      - AWS_SECRET_KEY_MASTER=${AWS_SECRET_KEY_MASTER}
      - SERVER_NAME=${SERVER_NAME}
      
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /usr/bin/docker:/usr/bin/docker
      - temp_data:/home/temp
      - nginx_wwwroot_data:/home/wwwroot
      - nginx_ssl_data:/etc/letsencrypt
      - nginx_conf_data:/etc/nginx/conf.d

      - /root/.ssh:/root/.ssh # dev
      - /root/boot:/root/boot # dev
      - /root/.m2:/root/.m2 #dev
      
    restart: always
    depends_on:
      - nginx
      - web-pop-server
    ports:
      - 8080:8080
      - 8443:8443
    networks:
      - web_server_network
    logging:
      options:
        max-size: "200m"

      
networks:
  web_server_network:

volumes:
  nginx_conf_data:
      name: nginx_conf_data
  nginx_wwwroot_data:
    name: nginx_wwwroot_data
  nginx_ssl_data:
    name: nginx_ssl_data
  nginx_temp_logs:
    name: nginx_temp_logs
  temp_data:
    name: temp_data
  ttl3db_data:
    name: ttl3db_data
